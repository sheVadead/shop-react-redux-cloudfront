{
  "openapi": "3.0.0",
  "info": {
    "title": "LemonadeAPI",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://i8a5m5xcj2.execute-api.eu-central-1.amazonaws.com/dev"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Import",
      "description": "Import endpoints(for upload, parse and etc.)"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "operationId": "getProductList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create new product",
        "operationId": "createProduct",
        "requestBody": {
          "description": "Create new product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Product with id - XXXXXXXXXX successfully created"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Duplicate product name"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Find product by ID",
        "description": "Returns a single product",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal error"
          }
        },
        "servers": [
          {
            "url": "https://jvt21vcmc3.execute-api.eu-central-1.amazonaws.com/dev",
            "description": "Import host"
          }
        ]
      }
    },
    "/import": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Get signed url for file upload",
        "operationId": "importProductsList",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of product to return",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/text": {
                "schema": {
                  "type": "string",
                  "example": "URL"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "servers": [
        {
          "url": "https://wupnrqqit2.execute-api.eu-central-1.amazonaws.com/dev"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "required": ["title", "count", "price"],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "Best drink"
          },
          "photo_id": {
            "type": "string",
            "example": "photo-099999999999"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "example": 21
          },
          "title": {
            "type": "string",
            "example": "Sprite"
          }
        },
        "xml": {
          "name": "Products"
        }
      },
      "Products": {
        "type": "array",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "Best drink"
          },
          "photo_id": {
            "type": "string",
            "example": "photo-099999999999"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "example": 21
          },
          "title": {
            "type": "string",
            "example": "Sprite"
          }
        },
        "xml": {
          "name": "Products"
        },
        "items": {
          "$ref": "#/components/schemas/Product"
        }
      }
    },
    "requestBodies": {
      "Product": {
        "description": "Product object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "required": true
      }
    }
  }
}
